///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class InternshipDataLabels {
/*
{
  "label_value": [
    "International"
  ],
  "label_mobile": [
    "International"
  ],
  "label_app": [
    "International"
  ],
  "labels_app_in_card": [
    "International"
  ]
}
*/

  List<String?>? labelValue;
  List<String?>? labelMobile;
  List<String?>? labelApp;
  List<String?>? labelsAppInCard;

  InternshipDataLabels({
    this.labelValue,
    this.labelMobile,
    this.labelApp,
    this.labelsAppInCard,
  });
  InternshipDataLabels.fromJson(Map<String, dynamic> json) {
    if (json['label_value'] != null) {
      final v = json['label_value'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      labelValue = arr0;
    }
    if (json['label_mobile'] != null) {
      final v = json['label_mobile'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      labelMobile = arr0;
    }
    if (json['label_app'] != null) {
      final v = json['label_app'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      labelApp = arr0;
    }
    if (json['labels_app_in_card'] != null) {
      final v = json['labels_app_in_card'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      labelsAppInCard = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (labelValue != null) {
      final v = labelValue;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['label_value'] = arr0;
    }
    if (labelMobile != null) {
      final v = labelMobile;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['label_mobile'] = arr0;
    }
    if (labelApp != null) {
      final v = labelApp;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['label_app'] = arr0;
    }
    if (labelsAppInCard != null) {
      final v = labelsAppInCard;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['labels_app_in_card'] = arr0;
    }
    return data;
  }
}

class InternshipDataLocations {
/*
{
  "string": "Banga (Philippines)",
  "link": "Banga",
  "country": "Philippines",
  "region": "South Cotabato",
  "locationName": "Banga"
}
*/

  String? string;
  String? link;
  String? country;
  String? region;
  String? locationName;

  InternshipDataLocations({
    this.string,
    this.link,
    this.country,
    this.region,
    this.locationName,
  });
  InternshipDataLocations.fromJson(Map<String, dynamic> json) {
    string = json['string']?.toString();
    link = json['link']?.toString();
    country = json['country']?.toString();
    region = json['region']?.toString();
    locationName = json['locationName']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['string'] = string;
    data['link'] = link;
    data['country'] = country;
    data['region'] = region;
    data['locationName'] = locationName;
    return data;
  }
}

class InternshipDataStipend {
/*
{
  "salary": "₹ 20,000 /month",
  "tooltip": null,
  "salaryValue1": 20000,
  "salaryValue2": null,
  "salaryType": "fixed",
  "currency": "INR ",
  "scale": "permonth",
  "large_stipend_text": false
}
*/

  String? salary;
  String? tooltip;
  int? salaryValue1;
  String? salaryValue2;
  String? salaryType;
  String? currency;
  String? scale;
  bool? largeStipendText;

  InternshipDataStipend({
    this.salary,
    this.tooltip,
    this.salaryValue1,
    this.salaryValue2,
    this.salaryType,
    this.currency,
    this.scale,
    this.largeStipendText,
  });
  InternshipDataStipend.fromJson(Map<String, dynamic> json) {
    salary = json['salary']?.toString();
    tooltip = json['tooltip']?.toString();
    salaryValue1 = json['salaryValue1']?.toInt();
    salaryValue2 = json['salaryValue2']?.toString();
    salaryType = json['salaryType']?.toString();
    currency = json['currency']?.toString();
    scale = json['scale']?.toString();
    largeStipendText = json['large_stipend_text'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['salary'] = salary;
    data['tooltip'] = tooltip;
    data['salaryValue1'] = salaryValue1;
    data['salaryValue2'] = salaryValue2;
    data['salaryType'] = salaryType;
    data['currency'] = currency;
    data['scale'] = scale;
    data['large_stipend_text'] = largeStipendText;
    return data;
  }
}

class InternshipDataApplicationStatusMessage {
/*
{
  "to_show": false,
  "message": "0 applicants",
  "type": "high_applications"
}
*/

  bool? toShow;
  String? message;
  String? type;

  InternshipDataApplicationStatusMessage({
    this.toShow,
    this.message,
    this.type,
  });
  InternshipDataApplicationStatusMessage.fromJson(Map<String, dynamic> json) {
    toShow = json['to_show'];
    message = json['message']?.toString();
    type = json['type']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['to_show'] = toShow;
    data['message'] = message;
    data['type'] = type;
    return data;
  }
}

class InternshipData {
/*
{
  "id": 65381,
  "title": "Administration Intern",
  "employment_type": "internship",
  "application_status_message": {
    "to_show": false,
    "message": "0 applicants",
    "type": "high_applications"
  },
  "job_title": null,
  "work_from_home": false,
  "segment": "",
  "segment_label_value": null,
  "internship_type_label_value": null,
  "job_segments": [
    null
  ],
  "company_name": "Google (Gurgaon, India)",
  "company_url": "/company/google-1392204790",
  "is_premium": true,
  "is_premium_internship": true,
  "employer_name": "Bhavya",
  "company_logo": "6385f8a1c006b1669724321.png",
  "type": "regular",
  "url": "administration-internship-in-banga-at-google1703046510",
  "is_internchallenge": 0,
  "is_external": false,
  "is_active": true,
  "expires_at": "2024-01-24",
  "closed_at": "",
  "profile_name": "Administration",
  "part_time": false,
  "start_date": "Starts Immediately",
  "duration": "2 Months",
  "stipend": {
    "salary": "₹ 20,000 /month",
    "tooltip": null,
    "salaryValue1": 20000,
    "salaryValue2": null,
    "salaryType": "fixed",
    "currency": "INR ",
    "scale": "permonth",
    "large_stipend_text": false
  },
  "salary": null,
  "job_experience": null,
  "experience": "",
  "posted_on": "10 Jan' 24",
  "postedOnDateTime": 1704825000,
  "application_deadline": "24 Jan' 24",
  "expiring_in": "Apply by 24 Jan",
  "posted_by_label": "1 day ago",
  "posted_by_label_type": "success",
  "location_names": [
    "Banga (Philippines)"
  ],
  "locations": [
    {
      "string": "Banga (Philippines)",
      "link": "Banga",
      "country": "Philippines",
      "region": "South Cotabato",
      "locationName": "Banga"
    }
  ],
  "start_date_comparison_format": "2023-12-20",
  "start_date1": "2023-12-20",
  "start_date2": "2024-01-24",
  "is_ppo": false,
  "is_ppo_salary_disclosed": false,
  "ppo_salary": null,
  "ppo_salary2": null,
  "ppo_label_value": "With job offer",
  "to_show_extra_label": false,
  "extra_label_value": "",
  "is_extra_label_black": false,
  "campaign_names": [
    null
  ],
  "campaign_name": "",
  "to_show_in_search": false,
  "campaign_url": "",
  "campaign_start_date_time": null,
  "campaign_launch_date_time": null,
  "campaign_early_access_start_date_time": null,
  "campaign_end_date_time": null,
  "labels": [
    {
      "label_value": [
        "International"
      ],
      "label_mobile": [
        "International"
      ],
      "label_app": [
        "International"
      ],
      "labels_app_in_card": [
        "International"
      ]
    }
  ],
  "labels_app": "Internship",
  "labels_app_in_card": [
    "International"
  ],
  "is_covid_wfh_selected": false,
  "to_show_card_message": false,
  "message": "",
  "is_application_capping_enabled": false,
  "application_capping_message": "",
  "override_meta_details": [
    null
  ],
  "eligible_for_easy_apply": false,
  "eligible_for_b2b_apply_now": false,
  "to_show_b2b_label": false,
  "is_international_job": true,
  "to_show_cover_letter": true,
  "office_days": null
}
*/

  int? id;
  String? title;
  String? employmentType;
  InternshipDataApplicationStatusMessage? applicationStatusMessage;
  String? jobTitle;
  bool? workFromHome;
  String? segment;
  String? segmentLabelValue;
  String? internshipTypeLabelValue;
  List<dynamic>? jobSegments;
  String? companyName;
  String? companyUrl;
  bool? isPremium;
  bool? isPremiumInternship;
  String? employerName;
  String? companyLogo;
  String? type;
  String? url;
  int? isInternchallenge;
  bool? isExternal;
  bool? isActive;
  String? expiresAt;
  String? closedAt;
  String? profileName;
  bool? partTime;
  String? startDate;
  String? duration;
  InternshipDataStipend? stipend;
  String? salary;
  String? jobExperience;
  String? experience;
  String? postedOn;
  int? postedOnDateTime;
  String? applicationDeadline;
  String? expiringIn;
  String? postedByLabel;
  String? postedByLabelType;
  List<String?>? locationNames;
  List<InternshipDataLocations?>? locations;
  String? startDateComparisonFormat;
  String? startDate1;
  String? startDate2;
  bool? isPpo;
  bool? isPpoSalaryDisclosed;
  String? ppoSalary;
  String? ppoSalary2;
  String? ppoLabelValue;
  bool? toShowExtraLabel;
  String? extraLabelValue;
  bool? isExtraLabelBlack;
  List<dynamic>? campaignNames;
  String? campaignName;
  bool? toShowInSearch;
  String? campaignUrl;
  String? campaignStartDateTime;
  String? campaignLaunchDateTime;
  String? campaignEarlyAccessStartDateTime;
  String? campaignEndDateTime;
  List<InternshipDataLabels?>? labels;
  String? labelsApp;
  List<String?>? labelsAppInCard;
  bool? isCovidWfhSelected;
  bool? toShowCardMessage;
  String? message;
  bool? isApplicationCappingEnabled;
  String? applicationCappingMessage;
  List<dynamic>? overrideMetaDetails;
  bool? eligibleForEasyApply;
  bool? eligibleForB2bApplyNow;
  bool? toShowB2bLabel;
  bool? isInternationalJob;
  bool? toShowCoverLetter;
  String? officeDays;

  InternshipData({
    this.id,
    this.title,
    this.employmentType,
    this.applicationStatusMessage,
    this.jobTitle,
    this.workFromHome,
    this.segment,
    this.segmentLabelValue,
    this.internshipTypeLabelValue,
    this.jobSegments,
    this.companyName,
    this.companyUrl,
    this.isPremium,
    this.isPremiumInternship,
    this.employerName,
    this.companyLogo,
    this.type,
    this.url,
    this.isInternchallenge,
    this.isExternal,
    this.isActive,
    this.expiresAt,
    this.closedAt,
    this.profileName,
    this.partTime,
    this.startDate,
    this.duration,
    this.stipend,
    this.salary,
    this.jobExperience,
    this.experience,
    this.postedOn,
    this.postedOnDateTime,
    this.applicationDeadline,
    this.expiringIn,
    this.postedByLabel,
    this.postedByLabelType,
    this.locationNames,
    this.locations,
    this.startDateComparisonFormat,
    this.startDate1,
    this.startDate2,
    this.isPpo,
    this.isPpoSalaryDisclosed,
    this.ppoSalary,
    this.ppoSalary2,
    this.ppoLabelValue,
    this.toShowExtraLabel,
    this.extraLabelValue,
    this.isExtraLabelBlack,
    this.campaignNames,
    this.campaignName,
    this.toShowInSearch,
    this.campaignUrl,
    this.campaignStartDateTime,
    this.campaignLaunchDateTime,
    this.campaignEarlyAccessStartDateTime,
    this.campaignEndDateTime,
    this.labels,
    this.labelsApp,
    this.labelsAppInCard,
    this.isCovidWfhSelected,
    this.toShowCardMessage,
    this.message,
    this.isApplicationCappingEnabled,
    this.applicationCappingMessage,
    this.overrideMetaDetails,
    this.eligibleForEasyApply,
    this.eligibleForB2bApplyNow,
    this.toShowB2bLabel,
    this.isInternationalJob,
    this.toShowCoverLetter,
    this.officeDays,
  });
  InternshipData.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    title = json['title']?.toString();
    employmentType = json['employment_type']?.toString();
    applicationStatusMessage = (json['application_status_message'] != null) ? InternshipDataApplicationStatusMessage.fromJson(json['application_status_message']) : null;
    jobTitle = json['job_title']?.toString();
    workFromHome = json['work_from_home'];
    segment = json['segment']?.toString();
    segmentLabelValue = json['segment_label_value']?.toString();
    internshipTypeLabelValue = json['internship_type_label_value']?.toString();
    companyName = json['company_name']?.toString();
    companyUrl = json['company_url']?.toString();
    isPremium = json['is_premium'];
    isPremiumInternship = json['is_premium_internship'];
    employerName = json['employer_name']?.toString();
    companyLogo = json['company_logo']?.toString();
    type = json['type']?.toString();
    url = json['url']?.toString();
    isInternchallenge = json['is_internchallenge']?.toInt();
    isExternal = json['is_external'];
    isActive = json['is_active'];
    expiresAt = json['expires_at']?.toString();
    closedAt = json['closed_at']?.toString();
    profileName = json['profile_name']?.toString();
    partTime = json['part_time'];
    startDate = json['start_date']?.toString();
    duration = json['duration']?.toString();
    stipend = (json['stipend'] != null) ? InternshipDataStipend.fromJson(json['stipend']) : null;
    salary = json['salary']?.toString();
    jobExperience = json['job_experience']?.toString();
    experience = json['experience']?.toString();
    postedOn = json['posted_on']?.toString();
    postedOnDateTime = json['postedOnDateTime']?.toInt();
    applicationDeadline = json['application_deadline']?.toString();
    expiringIn = json['expiring_in']?.toString();
    postedByLabel = json['posted_by_label']?.toString();
    postedByLabelType = json['posted_by_label_type']?.toString();
    if (json['location_names'] != null) {
    final v = json['location_names'];
    final arr0 = <String>[];
    v.forEach((v) {
    arr0.add(v.toString());
    });
    locationNames = arr0;
    }
    if (json['locations'] != null) {
    final v = json['locations'];
    final arr0 = <InternshipDataLocations>[];
    v.forEach((v) {
    arr0.add(InternshipDataLocations.fromJson(v));
    });
    locations = arr0;
    }
    startDateComparisonFormat = json['start_date_comparison_format']?.toString();
    startDate1 = json['start_date1']?.toString();
    startDate2 = json['start_date2']?.toString();
    isPpo = json['is_ppo'];
    isPpoSalaryDisclosed = json['is_ppo_salary_disclosed'];
    ppoSalary = json['ppo_salary']?.toString();
    ppoSalary2 = json['ppo_salary2']?.toString();
    ppoLabelValue = json['ppo_label_value']?.toString();
    toShowExtraLabel = json['to_show_extra_label'];
    extraLabelValue = json['extra_label_value']?.toString();
    isExtraLabelBlack = json['is_extra_label_black'];
    campaignName = json['campaign_name']?.toString();
    toShowInSearch = json['to_show_in_search'];
    campaignUrl = json['campaign_url']?.toString();
    campaignStartDateTime = json['campaign_start_date_time']?.toString();
    campaignLaunchDateTime = json['campaign_launch_date_time']?.toString();
    campaignEarlyAccessStartDateTime = json['campaign_early_access_start_date_time']?.toString();
    campaignEndDateTime = json['campaign_end_date_time']?.toString();
    if (json['labels'] != null) {
    final v = json['labels'];
    final arr0 = <InternshipDataLabels>[];
    v.forEach((v) {
    arr0.add(InternshipDataLabels.fromJson(v));
    });
    labels = arr0;
    }
    labelsApp = json['labels_app']?.toString();
    if (json['labels_app_in_card'] != null) {
    final v = json['labels_app_in_card'];
    final arr0 = <String>[];
    v.forEach((v) {
    arr0.add(v.toString());
    });
    labelsAppInCard = arr0;
    }
    isCovidWfhSelected = json['is_covid_wfh_selected'];
    toShowCardMessage = json['to_show_card_message'];
    message = json['message']?.toString();
    isApplicationCappingEnabled = json['is_application_capping_enabled'];
    applicationCappingMessage = json['application_capping_message']?.toString();
    eligibleForEasyApply = json['eligible_for_easy_apply'];
    eligibleForB2bApplyNow = json['eligible_for_b2b_apply_now'];
    toShowB2bLabel = json['to_show_b2b_label'];
    isInternationalJob = json['is_international_job'];
    toShowCoverLetter = json['to_show_cover_letter'];
    officeDays = json['office_days']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['title'] = title;
    data['employment_type'] = employmentType;
    if (applicationStatusMessage != null) {
      data['application_status_message'] = applicationStatusMessage!.toJson();
    }
    data['job_title'] = jobTitle;
    data['work_from_home'] = workFromHome;
    data['segment'] = segment;
    data['segment_label_value'] = segmentLabelValue;
    data['internship_type_label_value'] = internshipTypeLabelValue;
    data['company_name'] = companyName;
    data['company_url'] = companyUrl;
    data['is_premium'] = isPremium;
    data['is_premium_internship'] = isPremiumInternship;
    data['employer_name'] = employerName;
    data['company_logo'] = companyLogo;
    data['type'] = type;
    data['url'] = url;
    data['is_internchallenge'] = isInternchallenge;
    data['is_external'] = isExternal;
    data['is_active'] = isActive;
    data['expires_at'] = expiresAt;
    data['closed_at'] = closedAt;
    data['profile_name'] = profileName;
    data['part_time'] = partTime;
    data['start_date'] = startDate;
    data['duration'] = duration;
    if (stipend != null) {
    data['stipend'] = stipend!.toJson();
    }
    data['salary'] = salary;
    data['job_experience'] = jobExperience;
    data['experience'] = experience;
    data['posted_on'] = postedOn;
    data['postedOnDateTime'] = postedOnDateTime;
    data['application_deadline'] = applicationDeadline;
    data['expiring_in'] = expiringIn;
    data['posted_by_label'] = postedByLabel;
    data['posted_by_label_type'] = postedByLabelType;
    if (locationNames != null) {
    final v = locationNames;
    final arr0 = [];
    v!.forEach((v) {
    arr0.add(v);
    });
    data['location_names'] = arr0;
    }
    if (locations != null) {
    final v = locations;
    final arr0 = [];
    v!.forEach((v) {
    arr0.add(v!.toJson());
    });
    data['locations'] = arr0;
    }
    data['start_date_comparison_format'] = startDateComparisonFormat;
    data['start_date1'] = startDate1;
    data['start_date2'] = startDate2;
    data['is_ppo'] = isPpo;
    data['is_ppo_salary_disclosed'] = isPpoSalaryDisclosed;
    data['ppo_salary'] = ppoSalary;
    data['ppo_salary2'] = ppoSalary2;
    data['ppo_label_value'] = ppoLabelValue;
    data['to_show_extra_label'] = toShowExtraLabel;
    data['extra_label_value'] = extraLabelValue;
    data['is_extra_label_black'] = isExtraLabelBlack;
    data['campaign_name'] = campaignName;
    data['to_show_in_search'] = toShowInSearch;
    data['campaign_url'] = campaignUrl;
    data['campaign_start_date_time'] = campaignStartDateTime;
    data['campaign_launch_date_time'] = campaignLaunchDateTime;
    data['campaign_early_access_start_date_time'] = campaignEarlyAccessStartDateTime;
    data['campaign_end_date_time'] = campaignEndDateTime;
    if (labels != null) {
    final v = labels;
    final arr0 = [];
    v!.forEach((v) {
    arr0.add(v!.toJson());
    });
    data['labels'] = arr0;
    }
    data['labels_app'] = labelsApp;
    if (labelsAppInCard != null) {
    final v = labelsAppInCard;
    final arr0 = [];
    v!.forEach((v) {
    arr0.add(v);
    });
    data['labels_app_in_card'] = arr0;
    }
    data['is_covid_wfh_selected'] = isCovidWfhSelected;
    data['to_show_card_message'] = toShowCardMessage;
    data['message'] = message;
    data['is_application_capping_enabled'] = isApplicationCappingEnabled;
    data['application_capping_message'] = applicationCappingMessage;
    data['eligible_for_easy_apply'] = eligibleForEasyApply;
    data['eligible_for_b2b_apply_now'] = eligibleForB2bApplyNow;
    data['to_show_b2b_label'] = toShowB2bLabel;
    data['is_international_job'] = isInternationalJob;
    data['to_show_cover_letter'] = toShowCoverLetter;
    data['office_days'] = officeDays;
    return data;
  }
}

class InternshipMetaInternshipMeta {
/*
{
  "65381": {
    "id": 65381,
    "title": "Administration Intern",
    "employment_type": "internship",
    "application_status_message": {
      "to_show": false,
      "message": "0 applicants",
      "type": "high_applications"
    },
    "job_title": null,
    "work_from_home": false,
    "segment": "",
    "segment_label_value": null,
    "internship_type_label_value": null,
    "job_segments": [
      null
    ],
    "company_name": "Google (Gurgaon, India)",
    "company_url": "/company/google-1392204790",
    "is_premium": true,
    "is_premium_internship": true,
    "employer_name": "Bhavya",
    "company_logo": "6385f8a1c006b1669724321.png",
    "type": "regular",
    "url": "administration-internship-in-banga-at-google1703046510",
    "is_internchallenge": 0,
    "is_external": false,
    "is_active": true,
    "expires_at": "2024-01-24",
    "closed_at": "",
    "profile_name": "Administration",
    "part_time": false,
    "start_date": "Starts Immediately",
    "duration": "2 Months",
    "stipend": {
      "salary": "₹ 20,000 /month",
      "tooltip": null,
      "salaryValue1": 20000,
      "salaryValue2": null,
      "salaryType": "fixed",
      "currency": "INR ",
      "scale": "permonth",
      "large_stipend_text": false
    },
    "salary": null,
    "job_experience": null,
    "experience": "",
    "posted_on": "10 Jan' 24",
    "postedOnDateTime": 1704825000,
    "application_deadline": "24 Jan' 24",
    "expiring_in": "Apply by 24 Jan",
    "posted_by_label": "1 day ago",
    "posted_by_label_type": "success",
    "location_names": [
      "Banga (Philippines)"
    ],
    "locations": [
      {
        "string": "Banga (Philippines)",
        "link": "Banga",
        "country": "Philippines",
        "region": "South Cotabato",
        "locationName": "Banga"
      }
    ],
    "start_date_comparison_format": "2023-12-20",
    "start_date1": "2023-12-20",
    "start_date2": "2024-01-24",
    "is_ppo": false,
    "is_ppo_salary_disclosed": false,
    "ppo_salary": null,
    "ppo_salary2": null,
    "ppo_label_value": "With job offer",
    "to_show_extra_label": false,
    "extra_label_value": "",
    "is_extra_label_black": false,
    "campaign_names": [
      null
    ],
    "campaign_name": "",
    "to_show_in_search": false,
    "campaign_url": "",
    "campaign_start_date_time": null,
    "campaign_launch_date_time": null,
    "campaign_early_access_start_date_time": null,
    "campaign_end_date_time": null,
    "labels": [
      {
        "label_value": [
          "International"
        ],
        "label_mobile": [
          "International"
        ],
        "label_app": [
          "International"
        ],
        "labels_app_in_card": [
          "International"
        ]
      }
    ],
    "labels_app": "Internship",
    "labels_app_in_card": [
      "International"
    ],
    "is_covid_wfh_selected": false,
    "to_show_card_message": false,
    "message": "",
    "is_application_capping_enabled": false,
    "application_capping_message": "",
    "override_meta_details": [
      null
    ],
    "eligible_for_easy_apply": false,
    "eligible_for_b2b_apply_now": false,
    "to_show_b2b_label": false,
    "is_international_job": true,
    "to_show_cover_letter": true,
    "office_days": null
  }
}
*/

  InternshipData? internshipData;

  InternshipMetaInternshipMeta({
    this.internshipData,
  });
  InternshipMetaInternshipMeta.fromJson(Map<String, dynamic> json) {
    internshipData = (json['65381'] != null) ? InternshipData.fromJson(json['65381']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (internshipData != null) {
      data['65381'] = internshipData!.toJson();
    }
    return data;
  }
}

class InternshipMeta {
/*
{
  "internship_meta": {
    "65381": {
      "id": 65381,
      "title": "Administration Intern",
      "employment_type": "internship",
      "application_status_message": {
        "to_show": false,
        "message": "0 applicants",
        "type": "high_applications"
      },
      "job_title": null,
      "work_from_home": false,
      "segment": "",
      "segment_label_value": null,
      "internship_type_label_value": null,
      "job_segments": [
        null
      ],
      "company_name": "Google (Gurgaon, India)",
      "company_url": "/company/google-1392204790",
      "is_premium": true,
      "is_premium_internship": true,
      "employer_name": "Bhavya",
      "company_logo": "6385f8a1c006b1669724321.png",
      "type": "regular",
      "url": "administration-internship-in-banga-at-google1703046510",
      "is_internchallenge": 0,
      "is_external": false,
      "is_active": true,
      "expires_at": "2024-01-24",
      "closed_at": "",
      "profile_name": "Administration",
      "part_time": false,
      "start_date": "Starts Immediately",
      "duration": "2 Months",
      "stipend": {
        "salary": "₹ 20,000 /month",
        "tooltip": null,
        "salaryValue1": 20000,
        "salaryValue2": null,
        "salaryType": "fixed",
        "currency": "INR ",
        "scale": "permonth",
        "large_stipend_text": false
      },
      "salary": null,
      "job_experience": null,
      "experience": "",
      "posted_on": "10 Jan' 24",
      "postedOnDateTime": 1704825000,
      "application_deadline": "24 Jan' 24",
      "expiring_in": "Apply by 24 Jan",
      "posted_by_label": "1 day ago",
      "posted_by_label_type": "success",
      "location_names": [
        "Banga (Philippines)"
      ],
      "locations": [
        {
          "string": "Banga (Philippines)",
          "link": "Banga",
          "country": "Philippines",
          "region": "South Cotabato",
          "locationName": "Banga"
        }
      ],
      "start_date_comparison_format": "2023-12-20",
      "start_date1": "2023-12-20",
      "start_date2": "2024-01-24",
      "is_ppo": false,
      "is_ppo_salary_disclosed": false,
      "ppo_salary": null,
      "ppo_salary2": null,
      "ppo_label_value": "With job offer",
      "to_show_extra_label": false,
      "extra_label_value": "",
      "is_extra_label_black": false,
      "campaign_names": [
        null
      ],
      "campaign_name": "",
      "to_show_in_search": false,
      "campaign_url": "",
      "campaign_start_date_time": null,
      "campaign_launch_date_time": null,
      "campaign_early_access_start_date_time": null,
      "campaign_end_date_time": null,
      "labels": [
        {
          "label_value": [
            "International"
          ],
          "label_mobile": [
            "International"
          ],
          "label_app": [
            "International"
          ],
          "labels_app_in_card": [
            "International"
          ]
        }
      ],
      "labels_app": "Internship",
      "labels_app_in_card": [
        "International"
      ],
      "is_covid_wfh_selected": false,
      "to_show_card_message": false,
      "message": "",
      "is_application_capping_enabled": false,
      "application_capping_message": "",
      "override_meta_details": [
        null
      ],
      "eligible_for_easy_apply": false,
      "eligible_for_b2b_apply_now": false,
      "to_show_b2b_label": false,
      "is_international_job": true,
      "to_show_cover_letter": true,
      "office_days": null
    }
  }
}
*/

  InternshipMetaInternshipMeta? internshipMeta;

  InternshipMeta({
    this.internshipMeta,
  });
  InternshipMeta.fromJson(Map<String, dynamic> json) {
    internshipMeta = (json['internship_meta'] != null) ? InternshipMetaInternshipMeta.fromJson(json['internship_meta']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (internshipMeta != null) {
      data['internship_meta'] = internshipMeta!.toJson();
    }
    return data;
  }
}
